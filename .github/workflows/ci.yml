name: Db-Connector CI
on: [push, pull_request]
jobs:
  db-connector:
    name: Db-Connector
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_ROOT_PASSWORD: password
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3
    strategy:
      fail-fast: true
      matrix:
#        php-versions: ['7.1', '7.2', '7.3', '7.4']
        php-versions: ['7.1']
    steps:
      - name: Checkout
        uses: actions/checkout@v2.0.0

      - name: Ping MySQL
        run: |
          while ! mysqladmin ping -h"127.0.0.1" -P"3306" --silent; do
            sleep 1
          done

      - name: Test MySQL
        run: |
          mysql -h"127.0.0.1" -P${{ job.services.mysql.ports['3306'] }} -uroot -ppassword -e "SHOW DATABASES"

      - name: Create MySQL Users
        run: |
          sudo mysql -h"127.0.0.1" -P${{ job.services.mysql.ports['3306'] }} -u root -ppassword -e 'CREATE USER IF NOT EXISTS travis@localhost IDENTIFIED BY "password"; GRANT ALL ON *.* TO travis@localhost;'

      - name: Validate Composer .json and .lock
        run: composer validate

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Code sniffer
        run: vendor/bin/phpcs

      - name: PHPStan
        run: vendor/bin/phpstan analyze -c $GITHUB_WORKSPACE/phpstan.neon

      - name: PHPUnit
        run: vendor/bin/phpunit -c $GITHUB_WORKSPACE/phpunit.xml --coverage-text
        env:
          FUNC_TEST_ENV_FILE: .env.github
          CI_PORT: ${{ job.services.mysql.ports['3306'] }}
